{"ast":null,"code":"var _jsxFileName = \"/Users/pratyksh/Desktop/jaideep MERN/taskboard-pro/client/src/contexts/AuthContext.tsx\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { createContext, useState, useContext, useEffect } from 'react';\nimport axios from 'axios';\n\n// Define types\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n// Create context\nconst AuthContext = /*#__PURE__*/createContext(undefined);\n\n// API base URL\nconst API_URL = process.env.REACT_APP_API_URL || 'http://localhost:5000/api';\n\n// Auth provider component\nexport const AuthProvider = ({\n  children\n}) => {\n  _s();\n  const [user, setUser] = useState(null);\n  const [token, setToken] = useState(null);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n\n  // Check if user is logged in on mount\n  useEffect(() => {\n    const storedToken = localStorage.getItem('token');\n    if (storedToken) {\n      setToken(storedToken);\n      fetchUserProfile(storedToken);\n    } else {\n      setLoading(false);\n    }\n  }, []);\n\n  // Fetch user profile with token\n  const fetchUserProfile = async authToken => {\n    try {\n      setLoading(true);\n      const response = await axios.get(`${API_URL}/auth/profile`, {\n        headers: {\n          Authorization: `Bearer ${authToken}`\n        }\n      });\n      setUser(response.data);\n      setLoading(false);\n    } catch (err) {\n      console.error('Error fetching user profile:', err);\n      setToken(null);\n      localStorage.removeItem('token');\n      setLoading(false);\n    }\n  };\n\n  // Login function\n  const login = async (email, password) => {\n    try {\n      setLoading(true);\n      setError(null);\n      const response = await axios.post(`${API_URL}/auth/login`, {\n        email,\n        password\n      });\n      const {\n        token: authToken,\n        user: userData\n      } = response.data;\n\n      // Save token to localStorage\n      localStorage.setItem('token', authToken);\n\n      // Update state\n      setToken(authToken);\n      setUser(userData);\n      setLoading(false);\n    } catch (err) {\n      var _err$response, _err$response$data;\n      setLoading(false);\n      setError(((_err$response = err.response) === null || _err$response === void 0 ? void 0 : (_err$response$data = _err$response.data) === null || _err$response$data === void 0 ? void 0 : _err$response$data.error) || 'Login failed');\n      throw err;\n    }\n  };\n\n  // Register function\n  const register = async (name, email, password) => {\n    try {\n      setLoading(true);\n      setError(null);\n      const response = await axios.post(`${API_URL}/auth/register`, {\n        name,\n        email,\n        password\n      });\n      const {\n        token: authToken,\n        user: userData\n      } = response.data;\n\n      // Save token to localStorage\n      localStorage.setItem('token', authToken);\n\n      // Update state\n      setToken(authToken);\n      setUser(userData);\n      setLoading(false);\n    } catch (err) {\n      var _err$response2, _err$response2$data;\n      setLoading(false);\n      setError(((_err$response2 = err.response) === null || _err$response2 === void 0 ? void 0 : (_err$response2$data = _err$response2.data) === null || _err$response2$data === void 0 ? void 0 : _err$response2$data.error) || 'Registration failed');\n      throw err;\n    }\n  };\n\n  // Google login function\n  const googleLogin = async idToken => {\n    try {\n      setLoading(true);\n      setError(null);\n      const response = await axios.post(`${API_URL}/auth/google`, {\n        idToken\n      });\n      const {\n        token: authToken,\n        user: userData\n      } = response.data;\n\n      // Save token to localStorage\n      localStorage.setItem('token', authToken);\n\n      // Update state\n      setToken(authToken);\n      setUser(userData);\n      setLoading(false);\n    } catch (err) {\n      var _err$response3, _err$response3$data;\n      setLoading(false);\n      setError(((_err$response3 = err.response) === null || _err$response3 === void 0 ? void 0 : (_err$response3$data = _err$response3.data) === null || _err$response3$data === void 0 ? void 0 : _err$response3$data.error) || 'Google authentication failed');\n      throw err;\n    }\n  };\n\n  // Logout function\n  const logout = () => {\n    localStorage.removeItem('token');\n    setUser(null);\n    setToken(null);\n  };\n\n  // Context value\n  const value = {\n    user,\n    token,\n    loading,\n    error,\n    login,\n    register,\n    googleLogin,\n    logout\n  };\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: value,\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 172,\n    columnNumber: 5\n  }, this);\n};\n\n// Custom hook to use auth context\n_s(AuthProvider, \"ihfjI6MF9YjLOpbFlkCQPaRWc98=\");\n_c = AuthProvider;\nexport const useAuth = () => {\n  _s2();\n  const context = useContext(AuthContext);\n  if (context === undefined) {\n    throw new Error('useAuth must be used within an AuthProvider');\n  }\n  return context;\n};\n_s2(useAuth, \"b9L3QQ+jgeyIrH0NfHrJ8nn7VMU=\");\nexport default AuthContext;\nvar _c;\n$RefreshReg$(_c, \"AuthProvider\");","map":{"version":3,"names":["React","createContext","useState","useContext","useEffect","axios","jsxDEV","_jsxDEV","AuthContext","undefined","API_URL","process","env","REACT_APP_API_URL","AuthProvider","children","_s","user","setUser","token","setToken","loading","setLoading","error","setError","storedToken","localStorage","getItem","fetchUserProfile","authToken","response","get","headers","Authorization","data","err","console","removeItem","login","email","password","post","userData","setItem","_err$response","_err$response$data","register","name","_err$response2","_err$response2$data","googleLogin","idToken","_err$response3","_err$response3$data","logout","value","Provider","fileName","_jsxFileName","lineNumber","columnNumber","_c","useAuth","_s2","context","Error","$RefreshReg$"],"sources":["/Users/pratyksh/Desktop/jaideep MERN/taskboard-pro/client/src/contexts/AuthContext.tsx"],"sourcesContent":["import React, { createContext, useState, useContext, useEffect } from 'react';\nimport axios from 'axios';\n\n// Define types\ninterface User {\n  _id: string;\n  name: string;\n  email: string;\n  profilePicture?: string;\n  badges?: Array<{\n    name: string;\n    description?: string;\n    awardedAt: Date;\n  }>;\n}\n\ninterface AuthContextType {\n  user: User | null;\n  token: string | null;\n  loading: boolean;\n  error: string | null;\n  login: (email: string, password: string) => Promise<void>;\n  register: (name: string, email: string, password: string) => Promise<void>;\n  googleLogin: (idToken: string) => Promise<void>;\n  logout: () => void;\n}\n\n// Create context\nconst AuthContext = createContext<AuthContextType | undefined>(undefined);\n\n// API base URL\nconst API_URL = process.env.REACT_APP_API_URL || 'http://localhost:5000/api';\n\n// Auth provider component\nexport const AuthProvider: React.FC<{ children: React.ReactNode }> = ({ children }) => {\n  const [user, setUser] = useState<User | null>(null);\n  const [token, setToken] = useState<string | null>(null);\n  const [loading, setLoading] = useState<boolean>(true);\n  const [error, setError] = useState<string | null>(null);\n\n  // Check if user is logged in on mount\n  useEffect(() => {\n    const storedToken = localStorage.getItem('token');\n    if (storedToken) {\n      setToken(storedToken);\n      fetchUserProfile(storedToken);\n    } else {\n      setLoading(false);\n    }\n  }, []);\n\n  // Fetch user profile with token\n  const fetchUserProfile = async (authToken: string) => {\n    try {\n      setLoading(true);\n      const response = await axios.get(`${API_URL}/auth/profile`, {\n        headers: {\n          Authorization: `Bearer ${authToken}`\n        }\n      });\n      setUser(response.data);\n      setLoading(false);\n    } catch (err) {\n      console.error('Error fetching user profile:', err);\n      setToken(null);\n      localStorage.removeItem('token');\n      setLoading(false);\n    }\n  };\n\n  // Login function\n  const login = async (email: string, password: string) => {\n    try {\n      setLoading(true);\n      setError(null);\n      \n      const response = await axios.post(`${API_URL}/auth/login`, {\n        email,\n        password\n      });\n      \n      const { token: authToken, user: userData } = response.data;\n      \n      // Save token to localStorage\n      localStorage.setItem('token', authToken);\n      \n      // Update state\n      setToken(authToken);\n      setUser(userData);\n      setLoading(false);\n    } catch (err: any) {\n      setLoading(false);\n      setError(err.response?.data?.error || 'Login failed');\n      throw err;\n    }\n  };\n\n  // Register function\n  const register = async (name: string, email: string, password: string) => {\n    try {\n      setLoading(true);\n      setError(null);\n      \n      const response = await axios.post(`${API_URL}/auth/register`, {\n        name,\n        email,\n        password\n      });\n      \n      const { token: authToken, user: userData } = response.data;\n      \n      // Save token to localStorage\n      localStorage.setItem('token', authToken);\n      \n      // Update state\n      setToken(authToken);\n      setUser(userData);\n      setLoading(false);\n    } catch (err: any) {\n      setLoading(false);\n      setError(err.response?.data?.error || 'Registration failed');\n      throw err;\n    }\n  };\n\n  // Google login function\n  const googleLogin = async (idToken: string) => {\n    try {\n      setLoading(true);\n      setError(null);\n      \n      const response = await axios.post(`${API_URL}/auth/google`, {\n        idToken\n      });\n      \n      const { token: authToken, user: userData } = response.data;\n      \n      // Save token to localStorage\n      localStorage.setItem('token', authToken);\n      \n      // Update state\n      setToken(authToken);\n      setUser(userData);\n      setLoading(false);\n    } catch (err: any) {\n      setLoading(false);\n      setError(err.response?.data?.error || 'Google authentication failed');\n      throw err;\n    }\n  };\n\n  // Logout function\n  const logout = () => {\n    localStorage.removeItem('token');\n    setUser(null);\n    setToken(null);\n  };\n\n  // Context value\n  const value = {\n    user,\n    token,\n    loading,\n    error,\n    login,\n    register,\n    googleLogin,\n    logout\n  };\n\n  return (\n    <AuthContext.Provider value={value}>\n      {children}\n    </AuthContext.Provider>\n  );\n};\n\n// Custom hook to use auth context\nexport const useAuth = () => {\n  const context = useContext(AuthContext);\n  if (context === undefined) {\n    throw new Error('useAuth must be used within an AuthProvider');\n  }\n  return context;\n};\n\nexport default AuthContext; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}