{"ast":null,"code":"import React,{createContext,useState,useContext,useEffect}from'react';import axios from'axios';// Define types\nimport{jsx as _jsx}from\"react/jsx-runtime\";// Create context\nconst AuthContext=/*#__PURE__*/createContext(undefined);// API base URL\nconst API_URL=process.env.REACT_APP_API_URL||'http://localhost:5000/api';// Auth provider component\nexport const AuthProvider=_ref=>{let{children}=_ref;const[user,setUser]=useState(null);const[token,setToken]=useState(null);const[loading,setLoading]=useState(true);const[error,setError]=useState(null);// Check if user is logged in on mount\nuseEffect(()=>{const storedToken=localStorage.getItem('token');if(storedToken){setToken(storedToken);fetchUserProfile(storedToken);}else{setLoading(false);}},[]);// Fetch user profile with token\nconst fetchUserProfile=async authToken=>{try{setLoading(true);const response=await axios.get(\"\".concat(API_URL,\"/auth/profile\"),{headers:{Authorization:\"Bearer \".concat(authToken)}});setUser(response.data);setLoading(false);}catch(err){console.error('Error fetching user profile:',err);setToken(null);localStorage.removeItem('token');setLoading(false);}};// Login function\nconst login=async(email,password)=>{try{setLoading(true);setError(null);const response=await axios.post(\"\".concat(API_URL,\"/auth/login\"),{email,password});const{token:authToken,user:userData}=response.data;// Save token to localStorage\nlocalStorage.setItem('token',authToken);// Update state\nsetToken(authToken);setUser(userData);setLoading(false);}catch(err){var _err$response,_err$response$data;setLoading(false);setError(((_err$response=err.response)===null||_err$response===void 0?void 0:(_err$response$data=_err$response.data)===null||_err$response$data===void 0?void 0:_err$response$data.error)||'Login failed');throw err;}};// Register function\nconst register=async(name,email,password)=>{try{setLoading(true);setError(null);const response=await axios.post(\"\".concat(API_URL,\"/auth/register\"),{name,email,password});const{token:authToken,user:userData}=response.data;// Save token to localStorage\nlocalStorage.setItem('token',authToken);// Update state\nsetToken(authToken);setUser(userData);setLoading(false);}catch(err){var _err$response2,_err$response2$data;setLoading(false);setError(((_err$response2=err.response)===null||_err$response2===void 0?void 0:(_err$response2$data=_err$response2.data)===null||_err$response2$data===void 0?void 0:_err$response2$data.error)||'Registration failed');throw err;}};// Google login function\nconst googleLogin=async idToken=>{try{setLoading(true);setError(null);const response=await axios.post(\"\".concat(API_URL,\"/auth/google\"),{idToken});const{token:authToken,user:userData}=response.data;// Save token to localStorage\nlocalStorage.setItem('token',authToken);// Update state\nsetToken(authToken);setUser(userData);setLoading(false);}catch(err){var _err$response3,_err$response3$data;setLoading(false);setError(((_err$response3=err.response)===null||_err$response3===void 0?void 0:(_err$response3$data=_err$response3.data)===null||_err$response3$data===void 0?void 0:_err$response3$data.error)||'Google authentication failed');throw err;}};// Logout function\nconst logout=()=>{localStorage.removeItem('token');setUser(null);setToken(null);};// Context value\nconst value={user,token,loading,error,login,register,googleLogin,logout};return/*#__PURE__*/_jsx(AuthContext.Provider,{value:value,children:children});};// Custom hook to use auth context\nexport const useAuth=()=>{const context=useContext(AuthContext);if(context===undefined){throw new Error('useAuth must be used within an AuthProvider');}return context;};export default AuthContext;","map":{"version":3,"names":["React","createContext","useState","useContext","useEffect","axios","jsx","_jsx","AuthContext","undefined","API_URL","process","env","REACT_APP_API_URL","AuthProvider","_ref","children","user","setUser","token","setToken","loading","setLoading","error","setError","storedToken","localStorage","getItem","fetchUserProfile","authToken","response","get","concat","headers","Authorization","data","err","console","removeItem","login","email","password","post","userData","setItem","_err$response","_err$response$data","register","name","_err$response2","_err$response2$data","googleLogin","idToken","_err$response3","_err$response3$data","logout","value","Provider","useAuth","context","Error"],"sources":["/Users/pratyksh/Desktop/jaideep MERN/taskboard-pro/client/src/contexts/AuthContext.tsx"],"sourcesContent":["import React, { createContext, useState, useContext, useEffect } from 'react';\nimport axios from 'axios';\n\n// Define types\ninterface User {\n  _id: string;\n  name: string;\n  email: string;\n  profilePicture?: string;\n  badges?: Array<{\n    name: string;\n    description?: string;\n    awardedAt: Date;\n  }>;\n}\n\ninterface AuthContextType {\n  user: User | null;\n  token: string | null;\n  loading: boolean;\n  error: string | null;\n  login: (email: string, password: string) => Promise<void>;\n  register: (name: string, email: string, password: string) => Promise<void>;\n  googleLogin: (idToken: string) => Promise<void>;\n  logout: () => void;\n}\n\n// Create context\nconst AuthContext = createContext<AuthContextType | undefined>(undefined);\n\n// API base URL\nconst API_URL = process.env.REACT_APP_API_URL || 'http://localhost:5000/api';\n\n// Auth provider component\nexport const AuthProvider: React.FC<{ children: React.ReactNode }> = ({ children }) => {\n  const [user, setUser] = useState<User | null>(null);\n  const [token, setToken] = useState<string | null>(null);\n  const [loading, setLoading] = useState<boolean>(true);\n  const [error, setError] = useState<string | null>(null);\n\n  // Check if user is logged in on mount\n  useEffect(() => {\n    const storedToken = localStorage.getItem('token');\n    if (storedToken) {\n      setToken(storedToken);\n      fetchUserProfile(storedToken);\n    } else {\n      setLoading(false);\n    }\n  }, []);\n\n  // Fetch user profile with token\n  const fetchUserProfile = async (authToken: string) => {\n    try {\n      setLoading(true);\n      const response = await axios.get(`${API_URL}/auth/profile`, {\n        headers: {\n          Authorization: `Bearer ${authToken}`\n        }\n      });\n      setUser(response.data);\n      setLoading(false);\n    } catch (err) {\n      console.error('Error fetching user profile:', err);\n      setToken(null);\n      localStorage.removeItem('token');\n      setLoading(false);\n    }\n  };\n\n  // Login function\n  const login = async (email: string, password: string) => {\n    try {\n      setLoading(true);\n      setError(null);\n      \n      const response = await axios.post(`${API_URL}/auth/login`, {\n        email,\n        password\n      });\n      \n      const { token: authToken, user: userData } = response.data;\n      \n      // Save token to localStorage\n      localStorage.setItem('token', authToken);\n      \n      // Update state\n      setToken(authToken);\n      setUser(userData);\n      setLoading(false);\n    } catch (err: any) {\n      setLoading(false);\n      setError(err.response?.data?.error || 'Login failed');\n      throw err;\n    }\n  };\n\n  // Register function\n  const register = async (name: string, email: string, password: string) => {\n    try {\n      setLoading(true);\n      setError(null);\n      \n      const response = await axios.post(`${API_URL}/auth/register`, {\n        name,\n        email,\n        password\n      });\n      \n      const { token: authToken, user: userData } = response.data;\n      \n      // Save token to localStorage\n      localStorage.setItem('token', authToken);\n      \n      // Update state\n      setToken(authToken);\n      setUser(userData);\n      setLoading(false);\n    } catch (err: any) {\n      setLoading(false);\n      setError(err.response?.data?.error || 'Registration failed');\n      throw err;\n    }\n  };\n\n  // Google login function\n  const googleLogin = async (idToken: string) => {\n    try {\n      setLoading(true);\n      setError(null);\n      \n      const response = await axios.post(`${API_URL}/auth/google`, {\n        idToken\n      });\n      \n      const { token: authToken, user: userData } = response.data;\n      \n      // Save token to localStorage\n      localStorage.setItem('token', authToken);\n      \n      // Update state\n      setToken(authToken);\n      setUser(userData);\n      setLoading(false);\n    } catch (err: any) {\n      setLoading(false);\n      setError(err.response?.data?.error || 'Google authentication failed');\n      throw err;\n    }\n  };\n\n  // Logout function\n  const logout = () => {\n    localStorage.removeItem('token');\n    setUser(null);\n    setToken(null);\n  };\n\n  // Context value\n  const value = {\n    user,\n    token,\n    loading,\n    error,\n    login,\n    register,\n    googleLogin,\n    logout\n  };\n\n  return (\n    <AuthContext.Provider value={value}>\n      {children}\n    </AuthContext.Provider>\n  );\n};\n\n// Custom hook to use auth context\nexport const useAuth = () => {\n  const context = useContext(AuthContext);\n  if (context === undefined) {\n    throw new Error('useAuth must be used within an AuthProvider');\n  }\n  return context;\n};\n\nexport default AuthContext; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}