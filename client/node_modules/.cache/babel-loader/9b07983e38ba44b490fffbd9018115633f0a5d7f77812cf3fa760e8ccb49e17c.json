{"ast":null,"code":"import React,{useState}from'react';import{Link as RouterLink}from'react-router-dom';import{Container,Box,Typography,TextField,Button,Grid,Link,Paper,Divider,Alert,CircularProgress}from'@mui/material';import{useAuth}from'../contexts/AuthContext';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const Login=()=>{const[email,setEmail]=useState('');const[password,setPassword]=useState('');const[error,setError]=useState(null);const[isSubmitting,setIsSubmitting]=useState(false);const{login,googleLogin}=useAuth();const handleSubmit=async e=>{e.preventDefault();if(!email||!password){setError('Please enter both email and password');return;}try{setIsSubmitting(true);setError(null);await login(email,password);// Redirect is handled by the PublicRoute component\n}catch(err){var _err$response,_err$response$data;setError(((_err$response=err.response)===null||_err$response===void 0?void 0:(_err$response$data=_err$response.data)===null||_err$response$data===void 0?void 0:_err$response$data.error)||'Login failed');setIsSubmitting(false);}};const handleGoogleLogin=async()=>{try{// In a real app, you would integrate Firebase Auth here\n// For now, we'll just simulate it\nsetError('Google login is not implemented in this demo');// This would be the actual implementation:\n// const result = await firebase.auth().signInWithPopup(googleProvider);\n// const idToken = await result.user?.getIdToken();\n// if (idToken) {\n//   await googleLogin(idToken);\n// }\n}catch(err){setError(err.message||'Google login failed');}};return/*#__PURE__*/_jsx(Container,{maxWidth:\"sm\",children:/*#__PURE__*/_jsx(Box,{sx:{marginTop:8,display:'flex',flexDirection:'column',alignItems:'center'},children:/*#__PURE__*/_jsxs(Paper,{elevation:3,sx:{p:4,width:'100%',borderRadius:2},children:[/*#__PURE__*/_jsxs(Box,{sx:{display:'flex',flexDirection:'column',alignItems:'center',mb:3},children:[/*#__PURE__*/_jsx(Typography,{component:\"h1\",variant:\"h4\",sx:{fontWeight:'bold',color:'primary.main'},children:\"TaskBoard Pro\"}),/*#__PURE__*/_jsx(Typography,{component:\"h2\",variant:\"h6\",sx:{mt:1,color:'text.secondary'},children:\"Sign in to your account\"})]}),error&&/*#__PURE__*/_jsx(Alert,{severity:\"error\",sx:{mb:2},children:error}),/*#__PURE__*/_jsxs(Box,{component:\"form\",onSubmit:handleSubmit,noValidate:true,sx:{mt:1},children:[/*#__PURE__*/_jsx(TextField,{margin:\"normal\",required:true,fullWidth:true,id:\"email\",label:\"Email Address\",name:\"email\",autoComplete:\"email\",autoFocus:true,value:email,onChange:e=>setEmail(e.target.value),disabled:isSubmitting}),/*#__PURE__*/_jsx(TextField,{margin:\"normal\",required:true,fullWidth:true,name:\"password\",label:\"Password\",type:\"password\",id:\"password\",autoComplete:\"current-password\",value:password,onChange:e=>setPassword(e.target.value),disabled:isSubmitting}),/*#__PURE__*/_jsx(Button,{type:\"submit\",fullWidth:true,variant:\"contained\",sx:{mt:3,mb:2,py:1.5},disabled:isSubmitting,children:isSubmitting?/*#__PURE__*/_jsx(CircularProgress,{size:24}):'Sign In'}),/*#__PURE__*/_jsx(Divider,{sx:{my:2},children:\"or\"}),/*#__PURE__*/_jsx(Button,{fullWidth:true,variant:\"outlined\",sx:{mb:2,py:1.5},onClick:handleGoogleLogin,disabled:isSubmitting,children:\"Sign in with Google\"}),/*#__PURE__*/_jsx(Grid,{container:true,justifyContent:\"flex-end\",children:/*#__PURE__*/_jsx(Grid,{item:true,xs:true,children:/*#__PURE__*/_jsx(Link,{component:RouterLink,to:\"/register\",variant:\"body2\",children:\"Don't have an account? Sign Up\"})})})]})]})})});};export default Login;","map":{"version":3,"names":["React","useState","Link","RouterLink","Container","Box","Typography","TextField","Button","Grid","Paper","Divider","Alert","CircularProgress","useAuth","jsx","_jsx","jsxs","_jsxs","Login","email","setEmail","password","setPassword","error","setError","isSubmitting","setIsSubmitting","login","googleLogin","handleSubmit","e","preventDefault","err","_err$response","_err$response$data","response","data","handleGoogleLogin","message","maxWidth","children","sx","marginTop","display","flexDirection","alignItems","elevation","p","width","borderRadius","mb","component","variant","fontWeight","color","mt","severity","onSubmit","noValidate","margin","required","fullWidth","id","label","name","autoComplete","autoFocus","value","onChange","target","disabled","type","py","size","my","onClick","container","justifyContent","item","xs","to"],"sources":["/Users/pratyksh/Desktop/jaideep MERN/taskboard-pro/client/src/pages/Login.tsx"],"sourcesContent":["import React, { useState } from 'react';\nimport { Link as RouterLink } from 'react-router-dom';\nimport {\n  Container,\n  Box,\n  Typography,\n  TextField,\n  Button,\n  Grid,\n  Link,\n  Paper,\n  Divider,\n  Alert,\n  CircularProgress\n} from '@mui/material';\nimport { useAuth } from '../contexts/AuthContext';\n\nconst Login: React.FC = () => {\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n  const [error, setError] = useState<string | null>(null);\n  const [isSubmitting, setIsSubmitting] = useState(false);\n  \n  const { login, googleLogin } = useAuth();\n  \n  const handleSubmit = async (e: React.FormEvent) => {\n    e.preventDefault();\n    \n    if (!email || !password) {\n      setError('Please enter both email and password');\n      return;\n    }\n    \n    try {\n      setIsSubmitting(true);\n      setError(null);\n      await login(email, password);\n      // Redirect is handled by the PublicRoute component\n    } catch (err: any) {\n      setError(err.response?.data?.error || 'Login failed');\n      setIsSubmitting(false);\n    }\n  };\n  \n  const handleGoogleLogin = async () => {\n    try {\n      // In a real app, you would integrate Firebase Auth here\n      // For now, we'll just simulate it\n      setError('Google login is not implemented in this demo');\n      \n      // This would be the actual implementation:\n      // const result = await firebase.auth().signInWithPopup(googleProvider);\n      // const idToken = await result.user?.getIdToken();\n      // if (idToken) {\n      //   await googleLogin(idToken);\n      // }\n    } catch (err: any) {\n      setError(err.message || 'Google login failed');\n    }\n  };\n  \n  return (\n    <Container maxWidth=\"sm\">\n      <Box\n        sx={{\n          marginTop: 8,\n          display: 'flex',\n          flexDirection: 'column',\n          alignItems: 'center',\n        }}\n      >\n        <Paper\n          elevation={3}\n          sx={{\n            p: 4,\n            width: '100%',\n            borderRadius: 2,\n          }}\n        >\n          <Box\n            sx={{\n              display: 'flex',\n              flexDirection: 'column',\n              alignItems: 'center',\n              mb: 3,\n            }}\n          >\n            <Typography component=\"h1\" variant=\"h4\" sx={{ fontWeight: 'bold', color: 'primary.main' }}>\n              TaskBoard Pro\n            </Typography>\n            <Typography component=\"h2\" variant=\"h6\" sx={{ mt: 1, color: 'text.secondary' }}>\n              Sign in to your account\n            </Typography>\n          </Box>\n          \n          {error && (\n            <Alert severity=\"error\" sx={{ mb: 2 }}>\n              {error}\n            </Alert>\n          )}\n          \n          <Box component=\"form\" onSubmit={handleSubmit} noValidate sx={{ mt: 1 }}>\n            <TextField\n              margin=\"normal\"\n              required\n              fullWidth\n              id=\"email\"\n              label=\"Email Address\"\n              name=\"email\"\n              autoComplete=\"email\"\n              autoFocus\n              value={email}\n              onChange={(e) => setEmail(e.target.value)}\n              disabled={isSubmitting}\n            />\n            <TextField\n              margin=\"normal\"\n              required\n              fullWidth\n              name=\"password\"\n              label=\"Password\"\n              type=\"password\"\n              id=\"password\"\n              autoComplete=\"current-password\"\n              value={password}\n              onChange={(e) => setPassword(e.target.value)}\n              disabled={isSubmitting}\n            />\n            <Button\n              type=\"submit\"\n              fullWidth\n              variant=\"contained\"\n              sx={{ mt: 3, mb: 2, py: 1.5 }}\n              disabled={isSubmitting}\n            >\n              {isSubmitting ? <CircularProgress size={24} /> : 'Sign In'}\n            </Button>\n            \n            <Divider sx={{ my: 2 }}>or</Divider>\n            \n            <Button\n              fullWidth\n              variant=\"outlined\"\n              sx={{ mb: 2, py: 1.5 }}\n              onClick={handleGoogleLogin}\n              disabled={isSubmitting}\n            >\n              Sign in with Google\n            </Button>\n            \n            <Grid container justifyContent=\"flex-end\">\n              <Grid item xs>\n                <Link component={RouterLink} to=\"/register\" variant=\"body2\">\n                  {\"Don't have an account? Sign Up\"}\n                </Link>\n              </Grid>\n            </Grid>\n          </Box>\n        </Paper>\n      </Box>\n    </Container>\n  );\n};\n\nexport default Login; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}